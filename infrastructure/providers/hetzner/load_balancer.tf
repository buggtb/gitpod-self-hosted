resource "hcloud_load_balancer" "load_balancer" {
  name               = format(module.common.name_format, local.location, "kubernetes")
  load_balancer_type = local.deployment[var.size].load_balancer
  location           = var.location
  algorithm {
    type = "round_robin"
  }
}

resource "hcloud_load_balancer_network" "network-subnet" {
  load_balancer_id = hcloud_load_balancer.load_balancer.id
  network_id       = hcloud_network.network.id
}

resource "hcloud_load_balancer_target" "servers" {
  depends_on = [
    hcloud_load_balancer_network.network-subnet,
  ]

  type             = "label_selector"
  load_balancer_id = hcloud_load_balancer.load_balancer.id
  label_selector   = join(",", [for key, value in local.node_label : "${key}=${value}"])
  use_private_ip   = true
}

resource "hcloud_load_balancer_service" "http" {
  load_balancer_id = hcloud_load_balancer.load_balancer.id
  protocol         = "http"
  listen_port      = 80
}

resource "hcloud_load_balancer_service" "https" {
  load_balancer_id = hcloud_load_balancer.load_balancer.id
  protocol         = "tcp" # Use tcp not https as cert is generated by cluster
  listen_port      = 443
  destination_port = 443
}

resource "hcloud_load_balancer_service" "ssh" {
  load_balancer_id = hcloud_load_balancer.load_balancer.id
  protocol         = "tcp" # Use tcp not https as cert is generated by cluster
  listen_port      = 22
  destination_port = 22
}
